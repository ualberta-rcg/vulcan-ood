#!/bin/bash
#set -euo pipefail
set -x

OUTDIR="/etc/ood/config/apps/dashboard/initializers"
OUTFILE="${OUTDIR}/paice_app_versions.rb"
MODULE_USER="amiildapreader"

mkdir -p "$OUTDIR"

# Temporary file
TMPFILE=$(mktemp)

echo "# AUTOGENERATED: DO NOT EDIT MANUALLY" > "$TMPFILE"
echo "module CustomAppVersions" >> "$TMPFILE"

# Define apps
apps=(
  rstudio-server
  code-server
  paraview
  qgis
  blender
  octave
  mujoco
  afni
  gnuplot
  geant4
  visit
  matlab
  vmd
)

# Helper to title the app
get_title() {
  case "$1" in
    python) echo "Python" ;;
    r) echo "R" ;;
    rstudio-server) echo "RStudio Server" ;;
    code-server) echo "VS Code Server" ;;
    paraview) echo "ParaView" ;;
    vmd) echo "VMD" ;;
    qgis) echo "QGIS" ;;
    blender) echo "Blender" ;;
    octave) echo "Octave" ;;
    mujoco) echo "MuJoCo" ;;
    *) echo "$1" ;;
  esac
}

# Loop over each app
for app in "${apps[@]}"; do
  method_name="${app//-/_}_module_list"
  title=$(get_title "$app")

  echo "" >> "$TMPFILE"
  echo "  def self.${method_name}" >> "$TMPFILE"
  echo "    [" >> "$TMPFILE"

  # Get output
  output=$(sudo -u "$MODULE_USER" env -i bash --norc --noprofile -c "source /etc/profile 2>/dev/null && module spider $app 2>/dev/null")

  inside_versions=false
  versions=()

  while IFS= read -r line; do

    # Case 1: Matches inline single version like "octave: octave/7.2.0"
    if [[ "$line" =~ ^[[:space:]]*$app:\ $app/([0-9a-zA-Z\.\-]+) ]]; then
      version="${BASH_REMATCH[1]}"
      versions+=("$version")
      continue
    fi


    if echo "$line" | grep -q '^ *Versions:'; then
      inside_versions=true
      continue
    fi

    if $inside_versions; then
      if [[ "$line" =~ ^[[:space:]]*${app}/([0-9a-zA-Z\.\-]+) ]]; then
        version="${BASH_REMATCH[1]}"
        versions+=("$version")
      elif [[ "$line" =~ ^[-]+$ ]]; then
        inside_versions=false
      fi
    fi
  done <<< "$output"

  # Output versions into the Ruby method
  for v in "${versions[@]}"; do
    echo "      [\"$title $v\", \"$app/$v\"]," >> "$TMPFILE"
  done

  echo "    ].reverse" >> "$TMPFILE"
  echo "  end" >> "$TMPFILE"
done

echo "end" >> "$TMPFILE"

# Move it to the final location
mv "$TMPFILE" "$OUTFILE"
chmod 644 "$OUTFILE"
echo "Generated $OUTFILE successfully at $(date)"

