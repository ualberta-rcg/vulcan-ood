---
servername: vulcan.alliancecan.ca

node_uri: "/node"
rnode_uri: "/rnode"

errorlog: 'ood-error.log'
accesslog: 'ood-access.log'

# Use OIDC authentication
auth:
  - "AuthType openid-connect"
  - "Require valid-user"

# Use OIDC logout
logout_redirect: "https://idp.alliancecan.ca/idp/profile/Logout?return=https://alliancecan.ca"    # Return URL Needs some TLC

pun_pre_hook_root_cmd: "/opt/ood/scripts/ood_pun_oidc_email.sh"  # This Passes the OIDC Email Value to the Users PUN
pun_pre_hook_exports: "OIDC_CLAIM_email"

oidc_uri: "/oidc"
oidc_provider_metadata_url: "https://idp.alliancecan.ca/.well-known/openid-configuration"
oidc_client_id: "vulcan.alliancecan.ca"
oidc_client_secret: "OIDC_SECRET"
oidc_remote_user_claim: "preferred_username"
oidc_scope: "openid profile email"
oidc_session_inactivity_timeout: 28800
oidc_session_max_duration: 28800
oidc_state_max_number_of_cookies: "10 true"
oidc_settings:
  OIDCPassIDTokenAs: "serialized"
  OIDCPassRefreshToken: "On"
  OIDCPassClaimsAs: "environment"
  OIDCStripCookies: "mod_auth_openidc_session mod_auth_openidc_session_chunks mod_auth_openidc_session_0 mod_auth_openidc_session_1"
  OIDCResponseType: "code"
#  OIDCCacheType: "redis"                      #  Only Needed If Redis
#  OIDCRedisCacheServer: "172.26.92.19:6379"   #  Only Needed If Redis
#  OIDCRedisCachePassword: "REDIS_SECRET"      #  Only Needed If Redis
  OIDCXForwardedHeaders: "X-Forwarded-Proto"

ssl:
  - 'SSLCertificateFile "/etc/ssl/ood/fullchain.pem"'   # You must Generate the Certs yourself.
  - 'SSLCertificateKeyFile "/etc/ssl/ood/privkey.pem"'  # You must Generate the Certs yourself.

custom_vhost_directives:
  - 'LogLevel auth_openidc:debug'

