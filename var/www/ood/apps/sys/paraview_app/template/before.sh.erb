#!/bin/bash

# Export module if available
[[ $(type -t module) == "function" ]] && export -f module

# Get user and UID
USER_NAME="${USER:-$(whoami)}"
USER_UID="$(id -u "$USER_NAME" 2>/dev/null || getent passwd "$USER_NAME" | cut -d: -f3)"
echo "[before.sh.erb] User: $USER_NAME (UID: $USER_UID)"

<% if context.launch_app && !context.launch_app.strip.empty? %>
export OOD_APP_LAUNCH="<%= context.launch_app.strip %>"
echo "[before.sh.erb] Launching App: <%= context.launch_app.strip %>"
<% end %>

# Setup /run/user
sudo /usr/local/bin/create-ice.sh "$USER_UID"

# Set working dir for OOD (used by launch scripts like kde.sh)
export OOD_DIR="${PWD}"

# Clean problematic env vars
unset DBUS_SESSION_BUS_ADDRESS
unset DBUS_SESSION_BUS_PID
unset XDG_SESSION_TYPE
unset WAYLAND_DISPLAY

export OMP_NUM_THREADS="<%= context.num_cores %>"
export ISPCRT_DEFAULT_DEVICE_TYPE=disabled

# Set fallback XDG_RUNTIME_DIR
export XDG_RUNTIME_DIR="/tmp/xdg-runtime-$USER_UID"
mkdir -p "$XDG_RUNTIME_DIR"
chmod 700 "$XDG_RUNTIME_DIR"
echo "[before.sh.erb] XDG_RUNTIME_DIR set to $XDG_RUNTIME_DIR"

# Unset bash-exported functions (KDE dislikes these)
unset $(env | grep -o '^BASH_FUNC_.*%%' | cut -d= -f1)

# GPU detection
VGL_LIB_PATH="/usr/lib"
GPU_PRESENT=$(nvidia-smi --query-gpu=name --format=csv,noheader,nounits 2>/dev/null | grep -v "^$" | head -n 1)

if [[ -n "$GPU_PRESENT" && "$GPU_PRESENT" != "No devices were found" && -f "${VGL_LIB_PATH}/libdlfaker.so" && -f "${VGL_LIB_PATH}/libvglfaker.so" ]]; then
  export OOD_GPU_AVAILABLE=true
  export VGL_DISPLAY=egl
  export VTK_DEFAULT_RENDER_WINDOW_OFFSCREEN=1
  export MESA_LOADER_DRIVER_OVERRIDE=egl
  export LIBGL_ALWAYS_INDIRECT=1  
  export LD_PRELOAD="${VGL_LIB_PATH}/libdlfaker.so:${VGL_LIB_PATH}/libvglfaker.so"
  echo "[before.sh.erb] GPU detected: $GPU_PRESENT"
  echo "[before.sh.erb] VirtualGL enabled"
else
  export OOD_GPU_AVAILABLE=false
  export LIBGL_ALWAYS_SOFTWARE=1
  export QT_QUICK_BACKEND=software
  echo "[before.sh.erb] No GPU or VirtualGL missing â€” using software rendering"
fi

echo "[before.sh.erb] Setup complete."


