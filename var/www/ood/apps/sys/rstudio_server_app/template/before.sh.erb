#!/bin/bash

echo "[before.sh.erb] Starting RStudio Server Setup..."

# Export the module function if available
if [[ $(type -t module) == "function" ]]; then
  echo "[before.sh.erb] 'module' function is available."
  export -f module
else
  echo "[before.sh.erb] WARNING: 'module' function not available."
fi

# Determine current user and working directory
USER_NAME="${USER:-$(whoami)}"
JOB_DIR="$PWD"
echo "[before.sh.erb] USER_NAME=${USER_NAME}"
echo "[before.sh.erb] JOB_DIR=${JOB_DIR}"

# Find available port to run server on
export port=$(find_port ${host})
if [[ -z "$port" ]]; then
  echo "[before.sh.erb] ERROR: Failed to allocate a port."
  exit 1
else
  echo "[before.sh.erb] Selected available port: $port"
fi

# Generate secure password for RStudio
export password="$(create_passwd 16)"
export RSTUDIO_PASSWORD="${password}"
echo "[before.sh.erb] Generated RStudio password: $RSTUDIO_PASSWORD"

# Create CSRF token
<%
  require 'securerandom'
  token = SecureRandom.uuid
  ENV["token"] = token
%>
export token="<%= token %>"
echo "[before.sh.erb] Generated CSRF token: $token"

# Export log locations
export RSTUDIO_LOG_FILE="${JOB_DIR}/rstudio.log"
export RSESSION_WRAPPER_FILE="${JOB_DIR}/rsession_wrapper.sh"
export RSESSION_LOG_FILE="${JOB_DIR}/rsession.log"
export RSTUDIO_DATA_HOME="${JOB_DIR}/rstudio-data"

echo "[before.sh.erb] RSTUDIO_LOG_FILE=${RSTUDIO_LOG_FILE}"
echo "[before.sh.erb] RSESSION_LOG_FILE=${RSESSION_LOG_FILE}"
echo "[before.sh.erb] RSTUDIO_DATA_HOME=${RSTUDIO_DATA_HOME}"

# Create data dir
mkdir -p "$RSTUDIO_DATA_HOME"
if [[ $? -ne 0 ]]; then
  echo "[before.sh.erb] ERROR: Failed to create directory ${RSTUDIO_DATA_HOME}"
  exit 1
else
  echo "[before.sh.erb] Successfully created data directory."
fi

echo "[before.sh.erb] Setup complete."

